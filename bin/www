#!/usr/bin/env node

const http = require('http')
const config = require('config')
const app = require('../app')

const normalizePort = function normalizePort (val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

const port = normalizePort(config.get('app.port'))
const server = http.createServer(app.callback())

const host = config.get('env') === 'development' ? '0.0.0.0' : '127.0.0.1'

server.listen(port, host)

server.on('error', (err) => {
  if (err.syscall !== 'listen') {
    throw err
  }

  const bind = typeof port === 'string'
    ? `Pipe ${port}`
    : `Port ${port}`

  switch (err.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`)
      process.exit(1)
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`)
      process.exit(1)
    default:
      throw err
  }
})

server.on('listening', () => {
  if (config.get('app.debug')) {
    console.log()
    console.log(`Server is running at http://127.0.0.1:${port}`)
  }

  if (config.get('mock.status')) {
    console.log(`Mock server is running, failure rate of your settings is ${config.get('mock.failureRate')}.`)
    console.log()
  }
})
